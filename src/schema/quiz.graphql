type Query {
  _empty: String
}

type Quiz {
  id: String!
  name: String!
  course: String!
  instructions: String!
  due: Date
  questions: [MultipleChoiceQuestion]
}

input QuizInput {
  course: String!
  name: String!
  instructions: String!
  due: Date
}

type Mutation {
  addQuiz(quiz: QuizInput): String
}

type Query {
  quiz(quizId: String!): Quiz
}

# Questions
type QuestionOption {
  id: String!
  description: String!
}

type MultipleChoiceQuestion {
  id: String!
  quizId: String!
  description: String!
  options: [QuestionOption]
  answers: [String]
  points: Int!
}

input MultipleChoiceQuestionInput {
  quizId: String!
  description: String!
  options: [String]!
  answers: [Int]!
  points: Int
}

type Mutation {
  addQuestion(question: MultipleChoiceQuestionInput): String
}

type Query {
  question(questionId: String!): MultipleChoiceQuestion
}

type Query {
  questions(quizId: String!): [MultipleChoiceQuestion]
}

# Answers
type Answer {
  id: String!
  quizId: String!
  choices: [String]!
}

input AnswerInput {
  questionId: String!
  choices: [String]!
}

type Mutation {
  addAnswer(answer: AnswerInput): String
}

type Query {
  quizAnswer(questionId: String!): Answer
}

type Query {
  quizAnswers(quizId: String!): [Answer]
}

type QuizSubmissionSummary {
  id: String!
  quizId: String!
  student: String!
  points: Int!
  startedAt: Int
  sumbittedAt: Int
}

# Quiz Submission
type QuizSubmission {
  submission: QuizSubmissionSummary
  quiz: Quiz!
  questions: [MultipleChoiceQuestion]
  answers: [Answer]
}

input QuizSubmissionInput {
  student: String!
  quizId: String!
  answers: [AnswerInput]
}

type Mutation {
  addSubmission(submission: QuizSubmissionInput): String
}

type Query {
  quizSubmission(submissionId: String): QuizSubmission
}

type Query {
  quizSubmissions(quizId: String): [QuizSubmissionSummary]
}
