interface Question {
   id: String!
   description: String!
   points: Int!
   feedback: String
}

# FreeResponseQuestion
type FrQuestion implements Question {
   id: String!
   description: String!
   points: Int!
   answer: String # nullable to prevent students from cheating
   feedback: String
}

# Questions
type QuestionOption {
   id: Int!
   description: String!
}

# MultipleChoiceQuestion
type McQuestion implements Question {
   id: String!
   description: String!
   points: Int!
   options: [QuestionOption!]!
   answers: [Int!] # nullable to prevent students from cheating
   feedback: String
}

input FrQuestionInput {
   description: String!
   points: Int!
   answer: String! 
}

input McQuestionInput {
   description: String!
   points: Int!
   options: [String!]!
   answers: [Int!]!
}

type Query {
   questions(questionIds: [String!]!): [Question!]!
}

type Mutation {
   addFrQuestion(question: FrQuestionInput!): String!
   addMcQuestion(question: McQuestionInput!): String!
}
