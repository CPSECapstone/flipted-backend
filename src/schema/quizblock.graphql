interface Question {
   id: String!
   description: String!
   points: Int!
}

# Questions
type QuestionOption {
   id: Int!
   description: String!
}

# MultipleChoiceQuestion
type MCQuestion implements Question {
   id: String!
   description: String!
   points: Int!
   options: [QuestionOption]
   answers: [Int]
}

# FreeResponseQuestion
type FRQuestion implements Question {
   id: String!
   description: String!
   points: Int!
   answer: String
}

type QuizBlock implements TaskBlock {
   title: String
   blockId: String
   requiredScore: Int
   points: Int
   questions: [Question]
}

type Query {
   quizblock(blockId: String!): [Question]
}

input QuizBlockInput {
   blockId: String
   title: String
   requiredScore: Int
   points: Int
}

input MCQuestionInput {
   blockId: String!
   description: String!
   options: [String]!
   answers: [Int]!
   points: Int
}

input FRQuestionInput {
   blockId: String!
   description: String
   answer: String
   points: Int
}

type Mutation {
   addQuizBlock(quizblock: QuizBlockInput): String
   addMCQuestionToQuizBlock(question: MCQuestionInput!): String
   addFRQuestionToQuizBlock(question: FRQuestionInput!): String
}
