"""
Represents a students answer to a multiple choice question
"""
input MultipleChoiceAnswerInput {
   """
   The id of the task the quiz block is contained in 
   """
   taskId: String!

   """
   the id of the quiz block the question is contained in
   """
   questionBlockId: String!
   """
   The id of the question the student is answering
   """
   questionId: String!
   
   """
   The index of the question option chosen by the student
   """
   answerIndex: Int! 
}

"""
Represents a students answer to a free response question
"""
input FreeResponseAnswerInput {
   """
   The id of the task the question block is contained in 
   """
   taskId: String!

   """
   the id of the quiz block the question is contained in
   """
   questionBlockId: String!

   """
   The id of the question block the student is answering
   """
   questionId: String!

   """
   The string response provided by the student
   """
   answer: String! # free response text string
}

input TaskProgressInput {
   """
   The id of the task the user is submitting progress towards.
   """
   taskId: String!

   """
   The id if each requirement contained within each
   completed block
   """
   finishedRequirementIds: [String!]!
}

input TaskProgressInput {
   """
   The id of the task the user is submitting progress towards.
   """ 
   taskId: String!

   """
   The id if each requirement contained within each
   completed block
   """ 
   finishedRequirementIds: [String!]!
}

"""
Created when all requirements for a task have been satisfied and a task has
been submitted. Many fields may be null pending grading by the teacher
"""
type TaskSubmissionResult {
   """
   Will be true when the teacher has finalized their grading on the task
   """
   graded: Boolean!

   """ 
   The current amount of points awarded for completing this task.
   May be different before and after graded is set based on a combination of
   automatic scoring and teacher grading
   """
   awardedPoints: Int

   """
   Information on the student result 
   for each question that was graded (either automatically or manually)
   """
   gradedAnswers: [GradedAnswer!] 
}

"""
An answer to a question that has been graded either automatically or by the teacher
"""
type GradedAnswer {
   """
   The question that was graded
   """
   question: Question! 
   
   """
   The choice the student picked for this question. Will either be the index
   or the free response. 
   """
   chosenAnswer: String!

   """
   The number of possible points the teacher assigned to this question
   """
   pointsPossible: Int!

   """
   The number of points awarded either manually or automatically to this question
   """
   pointsAwarded: Int!
}

type Query {
   """
   Returns an existing task submission or errors if it does not exist.
   May be useful as a TaskSubmissionResult can change as a result of instructor actions. 
   """
   retrieveTaskSubmission(taskId: String) : TaskSubmissionResult!
}

type Mutation {

  """
  Should be called when a student has completed all rubric requirements and answered
  all questions in the task. If the above requirements are not satisfied, this will return 
  an error. Tells the system that the task is ready for grading.

  Even on a successful submission, many fields may be null 
  as a Task may require manual grading by an instructor.
  """
  submitTask(taskId: String) : TaskSubmissionResult #MAKE NULLABLE

  """
  Saves completed rubric requirements linked to this task for the user
  calling this function
  """
  submitTaskProgress(taskProgress: TaskProgressInput) : String

   """
   Saves a students answer to a multiple choice question quiz block
   """
   saveMultipleChoiceProgress(mcBlockInput: MultipleChoiceAnswerInput) : Boolean

   """
   Saves and a students answer to a free response question quiz block
   """
   saveFreeResponseProgress(frBlockInput: FreeResponseAnswerInput) : Boolean 
}
