type Task {
   id: String!
   name: String!
   instructions: String!
   points: Int!
   startAt: Date
   endAt: Date
   dueDate: Date
   pages: [Page!]!
   requirements: [RubricRequirement!]!
   course: String!
   missionId: String!
   missionIndex: Int!
   subMissionId: String
   objectiveId: String
   targetId: String
}

input TaskInput {
   name: String!
   instructions: String!
   points: Int!
   startAt: Date
   endAt: Date
   dueDate: Date
   pages: [PageInput]!
   requirements: [RubricRequirementInput!]!
   course: String!
   missionId: String!
   missionIndex: Int!
   subMissionId: String
   objectiveId: String
   targetId: String
}

type Page {
   blocks: [TaskBlock!]!
   skippable: Boolean
}

input PageInput {
   skippable: Boolean
}

type RubricRequirement {
   id: String!
   description: String
   isComplete: Boolean!
}

input RubricRequirementInput {
   description: String
}

type TaskInfo {
   id: String!
   name: String!
   course: String!
   missionId: String!
   missionIndex: Int!
   subMissionId: String
   objectiveId: String
   targetId: String
}

type Query {
   task(taskId: String): Task!
   tasks(subMissionId: String): [Task!]!
   taskInfo(taskId: String!): TaskInfo!
   taskInfosByCourse(course: String!): [TaskInfo!]!
}

type Mutation {
   addTask(task: TaskInput!): String
}
